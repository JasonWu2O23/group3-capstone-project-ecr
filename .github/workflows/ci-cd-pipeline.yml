name: CI/CD Pipeline
'on':
  workflow_call:
  push:
    branches:
      - main
jobs:
  terraform-create:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: us-east-1
      - name: Terraform init
        run: terraform init
      - name: Terraform fmt
        run: terraform fmt
      - name: Terraform plan
        run: terraform plan
      - name: Terraform apply
        run: terraform apply -auto-approve
  create-image:
    runs-on: ubuntu-latest
    environment: dev
    needs: terraform-create
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: 'Build, tag, and push image to Amazon ECR'
        id: build-image
        env:
          ECR_REGISTRY: '${{ steps.login-ecr.outputs.registry }}'
          ECR_REPOSITORY: group3-capstone-project-ecr
          IMAGE_TAG: latest
        run: >
                # Build a docker container and

                # push it to ECR so that it can

                # be deployed to ECS.

                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

                echo "::set-output
                name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
